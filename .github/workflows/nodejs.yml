name: Build binaries
on: [push]

jobs:
  linux64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: build & package
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update

          yarn zx tools/build/complete.mjs

          # manually tar it, to preserve the symlinks
          cd electron-output
          mv linux-unpacked companion-x64
          tar -cvzf companion-x64.tar.gz companion-x64
        env:
          CI: 1
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          USE_HARD_LINKS: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./dist/BUILD)

          echo "sourcename=electron-output/companion-x64.tar.gz" >> $GITHUB_OUTPUT
          echo "targetname=companion-linux-x64-${VERSION}.tar.gz" >> $GITHUB_OUTPUT
          echo "longversion=${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: beta
          dev-branch: develop

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion
          api-target: 'linux-tgz'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}

  osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: build & package
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update

          yarn zx tools/build/complete.mjs
        env:
          CI: 1
          CSC_LINK: ${{ secrets.OSX_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.OSX_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          USE_HARD_LINKS: false

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./dist/BUILD)

          echo "sourcename=electron-output/companion-mac-x64.dmg" >> $GITHUB_OUTPUT
          echo "targetname=companion-mac-x64-${VERSION}.dmg" >> $GITHUB_OUTPUT
          echo "longversion=${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: beta
          dev-branch: develop

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion
          api-target: 'mac-intel'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}

  osx-arm64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: yarn update
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn update
        env:
          CI: 1
      - name: build & package
        run: |
          yarn zx tools/build/complete.mjs darwin-arm64
        env:
          CI: 1
          CSC_LINK: ${{ secrets.OSX_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.OSX_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          USE_HARD_LINKS: false
          SKIP_LAUNCH_CHECK: true

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./dist/BUILD)

          echo "sourcename=electron-output/companion-mac-arm64.dmg" >> $GITHUB_OUTPUT
          echo "targetname=companion-mac-arm64-${VERSION}.dmg" >> $GITHUB_OUTPUT
          echo "longversion=${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: beta
          dev-branch: develop

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion
          api-target: 'mac-arm'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}

  win64:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: build & package
        shell: bash
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          # This fixes it somehow, and without it we get no logs from any shell scripts which are run
          yarn config set script-shell bash

          yarn update

          # zx needs this to be unset..
          yarn config set script-shell ''

          yarn zx tools/build/complete.mjs
        env:
          CI: 1
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          VERSION=$(cat ./dist/BUILD)

          echo "sourcename=electron-output/companion-win64.exe" >> $GITHUB_OUTPUT
          echo "targetname=companion-win64-${VERSION}.exe" >> $GITHUB_OUTPUT
          echo "longversion=${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: beta
          dev-branch: develop

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion
          api-target: 'win-x64'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}
