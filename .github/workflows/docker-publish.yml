name: Docker

on:
  push:
    branches:
      - master
      - beta
      - develop
    tags:
      - v*

env:
  IMAGE_NAME: companion

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Determine target image name
        id: image-name
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

           # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          IMAGES=
          IMAGES="$IMAGE_ID:$VERSION"$'\n'$IMAGES

          # debug output
          echo images $IMAGES
          echo ::set-output name=images::"$IMAGES"

      - name: Set up QEMU
        if: ${{ steps.image-name.outputs.images }}
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: ${{ steps.image-name.outputs.images }}
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        if: ${{ steps.image-name.outputs.images }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ steps.image-name.outputs.images }}
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.image-name.outputs.images }}
